{% comment %}
@name: Zapiet - Store Pickup + Delivery
@version: 7.1.2
@support: http://support.zapiet.com/
@comments: DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN.
{% endcomment %}


{{ 'storepickup.css' | asset_url | stylesheet_tag }}
{{ 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css' | stylesheet_tag }}

{% include 'storepickup-addons' %}

{% comment %}
*** MULTIPLE LANGUAGES ***
If no language code is set default to English. 
If you have multiple languages on your store you 
can make this variable dynamic by using the 
storepickup-addons.liquid file.
{% endcomment %}

{% if language_code == blank %}
  {% if shop.metafields.zapiet.default_language == blank %}
    {% assign language_code = 'en' %}
  {% else %}
    {% assign language_code = shop.metafields.zapiet.default_language %}
  {% endif %}
{% endif %}

{% capture cache_identifier %}settings.{{ language_code }}{% endcapture %}

<script src="{{ 'storepickup.js' | asset_url }}" {% unless request.page_type == 'cart' %}defer="defer"{% endunless %}></script>

<script type="text/javascript">
document.addEventListener("DOMContentLoaded", function(event) {  
  var products = [];

  {% for item in cart.items %}
     var product_collections = [];

     {% for collection in  item.product.collections %}
        product_collections.push("{{ collection.title | escape }}");
     {% endfor %}

     products.push({
       variant_id: {{ item.id }},
       product_id: {{ item.product.id }},
       collections: product_collections,
       tags: {{ item.product.tags | json }}
     });
  {% endfor %}
  ZapietCachedSettings = {
    // Your myshopify.com domain name. 
    shop_identifier: '{{ shop.permanent_domain }}',
    // Which language would you like the widget in? Default English. 
    language_code: '{{ language_code }}',
    // Any custom settings can go here.
    settings: {
      disable_deliveries: {{ disable_delivery | default: false }},
      disable_pickups: {{ disable_pickups | default: false }},
      disable_shipping: {{ disable_shipping | default: false }}
    },
    checkout_url: '{{ routes.cart_url }}',
    discount_code: '{{ discount_code | default: false }}',
    products: products,
    checkout_button_label: '{{ 'cart.general.checkout' | t }}',
    customer: {
      first_name: '{{ customer.default_address.first_name }}',
      last_name: '{{ customer.default_address.last_name }}',
      company: '{{ customer.default_address.company }}',
      address1: '{{ customer.default_address.address1 }}',
      address2: '{{ customer.default_address.address2 }}',
      city: '{{ customer.default_address.city }}',
      province: '{{ customer.default_address.province }}',
      country: '{{ customer.default_address.country }}',
      zip: '{{ customer.default_address.zip }}',
      phone: '{{ customer.default_address.phone }}'
    },
    advance_notice: {
      pickup: {
        value: '{{ pickup_notice_value }}',
        unit: '{{ pickup_notice_unit }}',
        breakpoint: '{{ pickup_notice_breakpoint }}',
        after_breakpoint_value: '{{ pickup_notice_after_breakpoint_value }}',
        after_breakpoint_unit: '{{ pickup_notice_after_breakpoint_unit }}'
      },
      delivery: { 
        value: '{{ delivery_notice_value }}',
        unit: '{{ delivery_notice_unit }}',
        breakpoint: '{{ delivery_notice_breakpoint }}',
        after_breakpoint_value: '{{ delivery_notice_after_breakpoint_value }}',
        after_breakpoint_unit: '{{ delivery_notice_after_breakpoint_unit }}'
      },
      shipping: {
        value: '{{ shipping_notice_value }}',
        breakpoint: '{{ shipping_notice_breakpoint }}',
        after_breakpoint_value: '{{ shipping_notice_after_breakpoint_value }}'
      }
    },
    // Do not modify the following parameters.
    cached_config: {{ shop.metafields.zapiet[cache_identifier] }}
  }

  Zapiet.start(ZapietCachedSettings);
});
</script>